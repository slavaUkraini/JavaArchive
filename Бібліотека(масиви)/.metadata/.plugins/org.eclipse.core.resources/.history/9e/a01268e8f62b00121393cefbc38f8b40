package ua.com.vita.krainik.firstPackage;

import java.io.IOException; 
/**
 * Class Array
 * Do not copy, it is my program.
 * @author Vita Krainik
 * @version 3.0 since 20.10.2012
 */
public class Array {
	private int[] mass;
	private boolean filled;
	
	public Array(){
		this(0);
	}
	
	//Додати елемент в кінець
	public void addEnd(int n) {
		Array tempMass = new Array(mass.length+1);
		for (int i = 0; i < mass.length;i++)
			tempMass.mass[i]=mass[i];
		tempMass.mass[tempMass.mass.length-1] = n;
		this.mass = tempMass.mass;//так можна чи ми граємось з посиланнями?
	}
	
	//Видалити елемент з кінця
	public void delEnd() {
		if (mass.length != 0){
			this.delete(mass.length);
		}
	}
	
	//"Почистити" масив, видалити всі елементи
	public void clear() {
		Array tempMass = new Array(0);
		this.mass = tempMass.mass;
	}
	//Видалити елемент за номером
	public void delete(int n) {
		if(mass.length != 0)
		{
		Array tempMass = new Array(mass.length-1);
		for(int i = 0; i<mass.length-1; i++){
			if (i>=n) {
				mass[i]=mass[i+1];
			}
			tempMass.mass[i]=this.mass[i];
		}
		this.mass = tempMass.mass;}
	}
	
	private Array(int size) {
		mass = new int[size];
		this.filled = false;
		//for(int i = 0; i < size; i++){
			//System.out.print("Введіть " + (i + 1) + "-й елемент масиву: ");
			//this.mass[i] = DataInput.getInt();
		//}
	}	
	
	private Array (Array massout) {
		//це створення ще одного такого самого об'єкту
		mass = new int[massout.mass.length];
		
		for (int i = 0; i < this.mass.length;i++){//поелементно чи можна було одразу увесь масив?
			this.mass[i] = massout.mass[i];
		}	
	}
	
	public void printmass () {
		/*Вивід елементів масиву на екран*/
		for (int i = 0; i < mass.length; i++){
			System.out.print(mass[i] + " ");
		}
		System.out.println(" ");
	}
	
	public void sortvybir () {
		//sorting
		for (int i = 0; i < mass.length; i++) {
			  int min = mass[i];
			  int imin = i; 
			  
			  for (int j = i+1; j < mass.length; j++) {
				  
				  if (mass[j] < min)
				  {
					  min = mass[j];
			          imin = j;
			          }
			    }
			    
			  if (i != imin) {
			        int temp = mass[i];
			        mass[i] = mass[imin];
			        mass[imin] = temp;
			    }
			}
		 printmass();
	}
	private void swap( int i, int j) {
	    int t = mass[i];
	    mass[i] = mass[j];
	    mass[j] = t;
	}
	public void sortbulb(){
		for(int i=mass.length-1;i>=0;i--) {
			for(int j=0; j<i;j++){
				if(mass[j]>mass[j+1])
					swap(j,j+1);
				}
		}
		printmass();
		}
	public void sortvstavka(){
		for(int i=0; i<mass.length;i++){
			int copyNumber=mass[i];
			int j = i;
			while (j>0 && copyNumber < mass[j-1]){
			mass[j]=mass[j-1]	;
			j--;
			}
			mass[j]=copyNumber;
		}
		printmass();
		
	}
			 
}